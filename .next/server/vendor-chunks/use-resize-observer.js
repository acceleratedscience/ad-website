"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/use-resize-observer";
exports.ids = ["vendor-chunks/use-resize-observer"];
exports.modules = {

/***/ "(ssr)/./node_modules/use-resize-observer/polyfilled.js":
/*!********************************************************!*\
  !*** ./node_modules/use-resize-observer/polyfilled.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nfunction _interopDefault(ex) {\n    return ex && typeof ex === \"object\" && \"default\" in ex ? ex[\"default\"] : ex;\n}\nvar ResizeObserver = _interopDefault(__webpack_require__(/*! resize-observer-polyfill */ \"(ssr)/./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js\"));\nvar react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nfunction useResizeObserver(opts) {\n    if (opts === void 0) {\n        opts = {};\n    }\n    // `defaultRef` Has to be non-conditionally declared here whether or not it'll\n    // be used as that's how hooks work.\n    // @see https://reactjs.org/docs/hooks-rules.html#explanation\n    var defaultRef = react.useRef(null); // Saving the callback as a ref. With this, I don't need to put onResize in the\n    // effect dep array, and just passing in an anonymous function without memoising\n    // will not reinstantiate the hook's ResizeObserver\n    var onResize = opts.onResize;\n    var onResizeRef = react.useRef(undefined);\n    onResizeRef.current = onResize; // Using a single instance throughought the hook's lifetime\n    var resizeObserverRef = react.useRef();\n    var ref = opts.ref || defaultRef;\n    var _useState = react.useState({\n        width: undefined,\n        height: undefined\n    }), size = _useState[0], setSize = _useState[1]; // Using a ref to track the previous width / height to avoid unnecessary renders\n    var previous = react.useRef({\n        width: undefined,\n        height: undefined\n    });\n    react.useEffect(function() {\n        if (resizeObserverRef.current) {\n            return;\n        }\n        resizeObserverRef.current = new ResizeObserver(function(entries) {\n            if (!Array.isArray(entries)) {\n                return;\n            } // Since we only observe the one element, we don't need to loop over the\n            // array\n            if (!entries.length) {\n                return;\n            }\n            var entry = entries[0]; // `Math.round` is in line with how CSS resolves sub-pixel values\n            var newWidth = Math.round(entry.contentRect.width);\n            var newHeight = Math.round(entry.contentRect.height);\n            if (previous.current.width !== newWidth || previous.current.height !== newHeight) {\n                var newSize = {\n                    width: newWidth,\n                    height: newHeight\n                };\n                if (onResizeRef.current) {\n                    onResizeRef.current(newSize);\n                } else {\n                    previous.current.width = newWidth;\n                    previous.current.height = newHeight;\n                    setSize(newSize);\n                }\n            }\n        });\n    }, []);\n    react.useEffect(function() {\n        if (typeof ref !== \"object\" || ref === null || !(ref.current instanceof Element)) {\n            return;\n        }\n        var element = ref.current;\n        resizeObserverRef.current.observe(element);\n        return function() {\n            return resizeObserverRef.current.unobserve(element);\n        };\n    }, [\n        ref\n    ]);\n    return react.useMemo(function() {\n        return {\n            ref: ref,\n            width: size.width,\n            height: size.height\n        };\n    }, [\n        ref,\n        size ? size.width : null,\n        size ? size.height : null\n    ]);\n}\nmodule.exports = useResizeObserver;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdXNlLXJlc2l6ZS1vYnNlcnZlci9wb2x5ZmlsbGVkLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsU0FBU0EsZ0JBQWlCQyxFQUFFO0lBQUksT0FBTyxNQUFRLE9BQU9BLE9BQU8sWUFBYSxhQUFhQSxLQUFNQSxFQUFFLENBQUMsVUFBVSxHQUFHQTtBQUFJO0FBRWpILElBQUlDLGlCQUFpQkYsZ0JBQWdCRyxtQkFBT0EsQ0FBQztBQUM3QyxJQUFJQyxRQUFRRCxtQkFBT0EsQ0FBQztBQUVwQixTQUFTRSxrQkFBa0JDLElBQUk7SUFDN0IsSUFBSUEsU0FBUyxLQUFLLEdBQUc7UUFDbkJBLE9BQU8sQ0FBQztJQUNWO0lBRUEsOEVBQThFO0lBQzlFLG9DQUFvQztJQUNwQyw2REFBNkQ7SUFDN0QsSUFBSUMsYUFBYUgsTUFBTUksTUFBTSxDQUFDLE9BQU8sK0VBQStFO0lBQ3BILGdGQUFnRjtJQUNoRixtREFBbUQ7SUFFbkQsSUFBSUMsV0FBV0gsS0FBS0csUUFBUTtJQUM1QixJQUFJQyxjQUFjTixNQUFNSSxNQUFNLENBQUNHO0lBQy9CRCxZQUFZRSxPQUFPLEdBQUdILFVBQVUsMkRBQTJEO0lBRTNGLElBQUlJLG9CQUFvQlQsTUFBTUksTUFBTTtJQUNwQyxJQUFJTSxNQUFNUixLQUFLUSxHQUFHLElBQUlQO0lBRXRCLElBQUlRLFlBQVlYLE1BQU1ZLFFBQVEsQ0FBQztRQUM3QkMsT0FBT047UUFDUE8sUUFBUVA7SUFDVixJQUNJUSxPQUFPSixTQUFTLENBQUMsRUFBRSxFQUNuQkssVUFBVUwsU0FBUyxDQUFDLEVBQUUsRUFBRSxnRkFBZ0Y7SUFHNUcsSUFBSU0sV0FBV2pCLE1BQU1JLE1BQU0sQ0FBQztRQUMxQlMsT0FBT047UUFDUE8sUUFBUVA7SUFDVjtJQUNBUCxNQUFNa0IsU0FBUyxDQUFDO1FBQ2QsSUFBSVQsa0JBQWtCRCxPQUFPLEVBQUU7WUFDN0I7UUFDRjtRQUVBQyxrQkFBa0JELE9BQU8sR0FBRyxJQUFJVixlQUFlLFNBQVVxQixPQUFPO1lBQzlELElBQUksQ0FBQ0MsTUFBTUMsT0FBTyxDQUFDRixVQUFVO2dCQUMzQjtZQUNGLEVBQUUsd0VBQXdFO1lBQzFFLFFBQVE7WUFHUixJQUFJLENBQUNBLFFBQVFHLE1BQU0sRUFBRTtnQkFDbkI7WUFDRjtZQUVBLElBQUlDLFFBQVFKLE9BQU8sQ0FBQyxFQUFFLEVBQUUsaUVBQWlFO1lBRXpGLElBQUlLLFdBQVdDLEtBQUtDLEtBQUssQ0FBQ0gsTUFBTUksV0FBVyxDQUFDZCxLQUFLO1lBQ2pELElBQUllLFlBQVlILEtBQUtDLEtBQUssQ0FBQ0gsTUFBTUksV0FBVyxDQUFDYixNQUFNO1lBRW5ELElBQUlHLFNBQVNULE9BQU8sQ0FBQ0ssS0FBSyxLQUFLVyxZQUFZUCxTQUFTVCxPQUFPLENBQUNNLE1BQU0sS0FBS2MsV0FBVztnQkFDaEYsSUFBSUMsVUFBVTtvQkFDWmhCLE9BQU9XO29CQUNQVixRQUFRYztnQkFDVjtnQkFFQSxJQUFJdEIsWUFBWUUsT0FBTyxFQUFFO29CQUN2QkYsWUFBWUUsT0FBTyxDQUFDcUI7Z0JBQ3RCLE9BQU87b0JBQ0xaLFNBQVNULE9BQU8sQ0FBQ0ssS0FBSyxHQUFHVztvQkFDekJQLFNBQVNULE9BQU8sQ0FBQ00sTUFBTSxHQUFHYztvQkFDMUJaLFFBQVFhO2dCQUNWO1lBQ0Y7UUFDRjtJQUNGLEdBQUcsRUFBRTtJQUNMN0IsTUFBTWtCLFNBQVMsQ0FBQztRQUNkLElBQUksT0FBT1IsUUFBUSxZQUFZQSxRQUFRLFFBQVEsQ0FBRUEsQ0FBQUEsSUFBSUYsT0FBTyxZQUFZc0IsT0FBTSxHQUFJO1lBQ2hGO1FBQ0Y7UUFFQSxJQUFJQyxVQUFVckIsSUFBSUYsT0FBTztRQUN6QkMsa0JBQWtCRCxPQUFPLENBQUN3QixPQUFPLENBQUNEO1FBQ2xDLE9BQU87WUFDTCxPQUFPdEIsa0JBQWtCRCxPQUFPLENBQUN5QixTQUFTLENBQUNGO1FBQzdDO0lBQ0YsR0FBRztRQUFDckI7S0FBSTtJQUNSLE9BQU9WLE1BQU1rQyxPQUFPLENBQUM7UUFDbkIsT0FBTztZQUNMeEIsS0FBS0E7WUFDTEcsT0FBT0UsS0FBS0YsS0FBSztZQUNqQkMsUUFBUUMsS0FBS0QsTUFBTTtRQUNyQjtJQUNGLEdBQUc7UUFBQ0o7UUFBS0ssT0FBT0EsS0FBS0YsS0FBSyxHQUFHO1FBQU1FLE9BQU9BLEtBQUtELE1BQU0sR0FBRztLQUFLO0FBQy9EO0FBRUFxQixPQUFPQyxPQUFPLEdBQUduQyIsInNvdXJjZXMiOlsid2VicGFjazovL2libS1hZC1uZXh0LXdlYnNpdGUvLi9ub2RlX21vZHVsZXMvdXNlLXJlc2l6ZS1vYnNlcnZlci9wb2x5ZmlsbGVkLmpzPzUzODIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBfaW50ZXJvcERlZmF1bHQgKGV4KSB7IHJldHVybiAoZXggJiYgKHR5cGVvZiBleCA9PT0gJ29iamVjdCcpICYmICdkZWZhdWx0JyBpbiBleCkgPyBleFsnZGVmYXVsdCddIDogZXg7IH1cblxudmFyIFJlc2l6ZU9ic2VydmVyID0gX2ludGVyb3BEZWZhdWx0KHJlcXVpcmUoJ3Jlc2l6ZS1vYnNlcnZlci1wb2x5ZmlsbCcpKTtcbnZhciByZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cbmZ1bmN0aW9uIHVzZVJlc2l6ZU9ic2VydmVyKG9wdHMpIHtcbiAgaWYgKG9wdHMgPT09IHZvaWQgMCkge1xuICAgIG9wdHMgPSB7fTtcbiAgfVxuXG4gIC8vIGBkZWZhdWx0UmVmYCBIYXMgdG8gYmUgbm9uLWNvbmRpdGlvbmFsbHkgZGVjbGFyZWQgaGVyZSB3aGV0aGVyIG9yIG5vdCBpdCdsbFxuICAvLyBiZSB1c2VkIGFzIHRoYXQncyBob3cgaG9va3Mgd29yay5cbiAgLy8gQHNlZSBodHRwczovL3JlYWN0anMub3JnL2RvY3MvaG9va3MtcnVsZXMuaHRtbCNleHBsYW5hdGlvblxuICB2YXIgZGVmYXVsdFJlZiA9IHJlYWN0LnVzZVJlZihudWxsKTsgLy8gU2F2aW5nIHRoZSBjYWxsYmFjayBhcyBhIHJlZi4gV2l0aCB0aGlzLCBJIGRvbid0IG5lZWQgdG8gcHV0IG9uUmVzaXplIGluIHRoZVxuICAvLyBlZmZlY3QgZGVwIGFycmF5LCBhbmQganVzdCBwYXNzaW5nIGluIGFuIGFub255bW91cyBmdW5jdGlvbiB3aXRob3V0IG1lbW9pc2luZ1xuICAvLyB3aWxsIG5vdCByZWluc3RhbnRpYXRlIHRoZSBob29rJ3MgUmVzaXplT2JzZXJ2ZXJcblxuICB2YXIgb25SZXNpemUgPSBvcHRzLm9uUmVzaXplO1xuICB2YXIgb25SZXNpemVSZWYgPSByZWFjdC51c2VSZWYodW5kZWZpbmVkKTtcbiAgb25SZXNpemVSZWYuY3VycmVudCA9IG9uUmVzaXplOyAvLyBVc2luZyBhIHNpbmdsZSBpbnN0YW5jZSB0aHJvdWdob3VnaHQgdGhlIGhvb2sncyBsaWZldGltZVxuXG4gIHZhciByZXNpemVPYnNlcnZlclJlZiA9IHJlYWN0LnVzZVJlZigpO1xuICB2YXIgcmVmID0gb3B0cy5yZWYgfHwgZGVmYXVsdFJlZjtcblxuICB2YXIgX3VzZVN0YXRlID0gcmVhY3QudXNlU3RhdGUoe1xuICAgIHdpZHRoOiB1bmRlZmluZWQsXG4gICAgaGVpZ2h0OiB1bmRlZmluZWRcbiAgfSksXG4gICAgICBzaXplID0gX3VzZVN0YXRlWzBdLFxuICAgICAgc2V0U2l6ZSA9IF91c2VTdGF0ZVsxXTsgLy8gVXNpbmcgYSByZWYgdG8gdHJhY2sgdGhlIHByZXZpb3VzIHdpZHRoIC8gaGVpZ2h0IHRvIGF2b2lkIHVubmVjZXNzYXJ5IHJlbmRlcnNcblxuXG4gIHZhciBwcmV2aW91cyA9IHJlYWN0LnVzZVJlZih7XG4gICAgd2lkdGg6IHVuZGVmaW5lZCxcbiAgICBoZWlnaHQ6IHVuZGVmaW5lZFxuICB9KTtcbiAgcmVhY3QudXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICBpZiAocmVzaXplT2JzZXJ2ZXJSZWYuY3VycmVudCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHJlc2l6ZU9ic2VydmVyUmVmLmN1cnJlbnQgPSBuZXcgUmVzaXplT2JzZXJ2ZXIoZnVuY3Rpb24gKGVudHJpZXMpIHtcbiAgICAgIGlmICghQXJyYXkuaXNBcnJheShlbnRyaWVzKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9IC8vIFNpbmNlIHdlIG9ubHkgb2JzZXJ2ZSB0aGUgb25lIGVsZW1lbnQsIHdlIGRvbid0IG5lZWQgdG8gbG9vcCBvdmVyIHRoZVxuICAgICAgLy8gYXJyYXlcblxuXG4gICAgICBpZiAoIWVudHJpZXMubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIGVudHJ5ID0gZW50cmllc1swXTsgLy8gYE1hdGgucm91bmRgIGlzIGluIGxpbmUgd2l0aCBob3cgQ1NTIHJlc29sdmVzIHN1Yi1waXhlbCB2YWx1ZXNcblxuICAgICAgdmFyIG5ld1dpZHRoID0gTWF0aC5yb3VuZChlbnRyeS5jb250ZW50UmVjdC53aWR0aCk7XG4gICAgICB2YXIgbmV3SGVpZ2h0ID0gTWF0aC5yb3VuZChlbnRyeS5jb250ZW50UmVjdC5oZWlnaHQpO1xuXG4gICAgICBpZiAocHJldmlvdXMuY3VycmVudC53aWR0aCAhPT0gbmV3V2lkdGggfHwgcHJldmlvdXMuY3VycmVudC5oZWlnaHQgIT09IG5ld0hlaWdodCkge1xuICAgICAgICB2YXIgbmV3U2l6ZSA9IHtcbiAgICAgICAgICB3aWR0aDogbmV3V2lkdGgsXG4gICAgICAgICAgaGVpZ2h0OiBuZXdIZWlnaHRcbiAgICAgICAgfTtcblxuICAgICAgICBpZiAob25SZXNpemVSZWYuY3VycmVudCkge1xuICAgICAgICAgIG9uUmVzaXplUmVmLmN1cnJlbnQobmV3U2l6ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcHJldmlvdXMuY3VycmVudC53aWR0aCA9IG5ld1dpZHRoO1xuICAgICAgICAgIHByZXZpb3VzLmN1cnJlbnQuaGVpZ2h0ID0gbmV3SGVpZ2h0O1xuICAgICAgICAgIHNldFNpemUobmV3U2l6ZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfSwgW10pO1xuICByZWFjdC51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgIGlmICh0eXBlb2YgcmVmICE9PSBcIm9iamVjdFwiIHx8IHJlZiA9PT0gbnVsbCB8fCAhKHJlZi5jdXJyZW50IGluc3RhbmNlb2YgRWxlbWVudCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgZWxlbWVudCA9IHJlZi5jdXJyZW50O1xuICAgIHJlc2l6ZU9ic2VydmVyUmVmLmN1cnJlbnQub2JzZXJ2ZShlbGVtZW50KTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHJlc2l6ZU9ic2VydmVyUmVmLmN1cnJlbnQudW5vYnNlcnZlKGVsZW1lbnQpO1xuICAgIH07XG4gIH0sIFtyZWZdKTtcbiAgcmV0dXJuIHJlYWN0LnVzZU1lbW8oZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB7XG4gICAgICByZWY6IHJlZixcbiAgICAgIHdpZHRoOiBzaXplLndpZHRoLFxuICAgICAgaGVpZ2h0OiBzaXplLmhlaWdodFxuICAgIH07XG4gIH0sIFtyZWYsIHNpemUgPyBzaXplLndpZHRoIDogbnVsbCwgc2l6ZSA/IHNpemUuaGVpZ2h0IDogbnVsbF0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHVzZVJlc2l6ZU9ic2VydmVyO1xuIl0sIm5hbWVzIjpbIl9pbnRlcm9wRGVmYXVsdCIsImV4IiwiUmVzaXplT2JzZXJ2ZXIiLCJyZXF1aXJlIiwicmVhY3QiLCJ1c2VSZXNpemVPYnNlcnZlciIsIm9wdHMiLCJkZWZhdWx0UmVmIiwidXNlUmVmIiwib25SZXNpemUiLCJvblJlc2l6ZVJlZiIsInVuZGVmaW5lZCIsImN1cnJlbnQiLCJyZXNpemVPYnNlcnZlclJlZiIsInJlZiIsIl91c2VTdGF0ZSIsInVzZVN0YXRlIiwid2lkdGgiLCJoZWlnaHQiLCJzaXplIiwic2V0U2l6ZSIsInByZXZpb3VzIiwidXNlRWZmZWN0IiwiZW50cmllcyIsIkFycmF5IiwiaXNBcnJheSIsImxlbmd0aCIsImVudHJ5IiwibmV3V2lkdGgiLCJNYXRoIiwicm91bmQiLCJjb250ZW50UmVjdCIsIm5ld0hlaWdodCIsIm5ld1NpemUiLCJFbGVtZW50IiwiZWxlbWVudCIsIm9ic2VydmUiLCJ1bm9ic2VydmUiLCJ1c2VNZW1vIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/use-resize-observer/polyfilled.js\n");

/***/ })

};
;